{"mappings":"AAGA,MAAMA,EAAcC,SAASC,cAAc,eACrCC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,iBAa3C,SAASG,EAAkBC,GACzB,MAAMC,EAAiB,qDAEPD,EAAQE,MAAMC,aAAaH,EAAQI,KAAKC,yBAC9CL,EAAQI,KAAKC,yCACEL,EAAQM,4CACLN,EAAQO,8CACTC,OAAOC,OAAOT,EAAQU,WAAWC,KAAK,4BAGjEC,IACAd,EAAYe,UAAYZ,C,CAG1B,SAASW,IACPf,EAAYgB,UAAY,GACxBf,EAAYe,UAAY,E,CAoC1BnB,EAAYoB,iBAAiB,QAASC,UAjCtC,WACE,MAAMC,EAActB,EAAYuB,MAAMC,OCpCjC,IAAwBd,EDqCT,KAAhBY,GCrCyBZ,ED0CdY,ECzCNG,MAAM,uCAAef,oDACvBgB,MAAKC,IACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,uCAAuCpB,IAAO,IAGrEqB,OAAMC,IACH,MAAM,IAAIF,MAAME,EAAM,KDiC7BN,MAAMO,IAEL,GADAf,KACKe,EACH,OAAOC,SAASC,OAAOC,QAAQ,6CAG7BH,EAAUI,OAAS,GACrBH,SAASC,OAAOG,KAAK,8DAInBL,EAAUI,QAAU,GAAKJ,EAAUI,QAAU,GAjDvD,SAA2BJ,GACzB,MAAMM,EAAYN,EAAUO,KAAKlC,IAC/B,MAAMmC,EAAWxC,SAASyC,cAAc,MAGxC,OAFAD,EAAStB,UAAY,aAAab,EAAQE,MAAMmC,aAAarC,EAAQI,KAAKkC,gBAAgBtC,EAAQI,KAAKkC,WACvGH,EAASrB,iBAAiB,SAAS,IAAMf,EAAkBC,KACpDmC,CAAQ,IAEjBvB,IACAf,EAAY0C,UAAUN,E,CA0ChBO,CAAkBb,GAIK,IAArBA,EAAUI,QACZhC,EAAkB4B,EAAU,GAAG,IAGlCF,OAAOC,IACNE,SAASC,OAAOC,QAAQ,0CACxBW,QAAQf,MAAMA,EAAM,IA3BtBd,G,GA8B0D","sources":["src/index.js","src/fetchCountries.js"],"sourcesContent":["\nimport { fetchCountries } from './fetchCountries.js';\n\nconst searchInput = document.querySelector('#search-box');\nconst countryList = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\n\nfunction renderCountryList(countries) {\n  const listItems = countries.map((country) => {\n    const listItem = document.createElement('li');\n    listItem.innerHTML = `<img src=\"${country.flags.svg}\" alt=\"${country.name.official}\" /> ${country.name.official}`;\n    listItem.addEventListener('click', () => renderCountryInfo(country));\n    return listItem;\n  });\n  clearUI();\n  countryList.append(...listItems);\n}\n\nfunction renderCountryInfo(country) {\n  const countryDetails = `\n    <div class=\"country-info\">\n      <img src=\"${country.flags.png}\" alt=\"${country.name.common}\" />\n      <h2>${country.name.common}</h2>\n      <p><b>Capital:</b> ${country.capital}</p>\n      <p><b>Population:</b> ${country.population}</p>\n      <p><b>Languages:</b> ${Object.values(country.languages).join(', ')}</p>\n    </div>\n  `;\n  clearUI();\n  countryInfo.innerHTML = countryDetails;\n}\n\nfunction clearUI() {\n  countryList.innerHTML = '';\n  countryInfo.innerHTML = '';\n}\n\nfunction onSearchInput() {\n  const searchValue = searchInput.value.trim();\n  if (searchValue === '') {\n    clearUI();\n    return;\n  }\n\n  fetchCountries(searchValue)\n    .then((countries) => {\n      clearUI();\n      if (!countries) {\n        return Notiflix.Notify.failure('Oops, there is no country with that name.');\n      }\n\n      if (countries.length > 10) {\n        Notiflix.Notify.info('Too many matches found. Please enter a more specific name.');\n        return;\n      }\n\n      if (countries.length >= 2 && countries.length <= 10) {\n        renderCountryList(countries);\n        return;\n      }\n\n      if (countries.length === 1) {\n        renderCountryInfo(countries[0]);\n      }\n    })\n    .catch((error) => {\n      Notiflix.Notify.failure('An error occurred while fetching data.');\n      console.error(error);\n    });\n}\nsearchInput.addEventListener('input', debounce(onSearchInput, 300));","const BASE_URL = \"https://restcountries.com/v3.1/name\";\n\nexport function fetchCountries(name) {\n    return fetch(`${BASE_URL}/${name}?fields=name,capital,population,flags,languages`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(`Failed to download country data for ${name}`);\n            }\n        })\n        .catch(error => {\n            throw new Error(error);\n        });\n}"],"names":["$1f0dc3b9307be026$var$searchInput","document","querySelector","$1f0dc3b9307be026$var$countryList","$1f0dc3b9307be026$var$countryInfo","$1f0dc3b9307be026$var$renderCountryInfo","country","countryDetails","flags","png","name","common","capital","population","Object","values","languages","join","$1f0dc3b9307be026$var$clearUI","innerHTML","addEventListener","debounce","searchValue","value","trim","fetch","then","response","ok","json","Error","catch","error","countries","Notiflix","Notify","failure","length","info","listItems","map","listItem","createElement","svg","official","append","$1f0dc3b9307be026$var$renderCountryList","console"],"version":3,"file":"index.506471bc.js.map"}